version: '3.8'
services:
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      # --- KRaft mode settings ---
      - KAFKA_CFG_NODE_ID=0                               # unique broker ID 
      - KAFKA_CFG_CONTROLLER_BROKER_ID=0                  # this node is also the controller 
      - KAFKA_CFG_PROCESS_ROLES=broker,controller         # run as both broker & controller 
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093  # client + controller listeners 
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT  # protocols 
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093     # Raft quorum config 
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER    # specify controller listener 
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true          # auto-create topics for dev 
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1      # single-node replication :contentReference[oaicite:1]{index=1}

  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  data_producers:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka
    restart: on-failure
  spark:
    image: bitnami/spark:3.4.1
    container_name: spark
    ports:
      - "7077:7077"
      - "8080:8080"
    environment:
      - SPARK_MODE=master
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=salesdb
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    depends_on:
      - kafka
      - postgres


  superset:
    image: apache/superset
    container_name: superset
    environment:
      - SUPERSET_SECRET_KEY=${SUPERSET_SECRET_KEY}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}

    ports:
      - "8088:8088"
    depends_on:
      - postgres
    volumes:
      - superset_home:/app/superset_home
    command:
      - bash
      - -c
      - |
        superset db upgrade &&
        superset fab create-admin --username ${ADMIN_USERNAME} --firstname Admin --lastname User --email ${ADMIN_EMAIL} --password ${ADMIN_PASSWORD} || true &&
        superset init

volumes:
  superset_home:
  postgres_data:
